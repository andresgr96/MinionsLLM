[
    {
        "layman_task": "Your task is to pick up a part and then stop moving. If you find a good part, drop the part and head to the waste area. If you don't find a good part, just continue to the source. If you find a good part while you're at the source, pick it up and keep going to the source. If you're in the waste area, go to the construction area. If none of these things happen, just drop the part.",
        "technical_task": "pick up the part and then stop moving, or if you detect a good part then drop the part and then go to the waste, or then go to the source, or if you detect a good part then pick up the part and then go to the source, or if you are in the waste then go to the construction, or otherwise then drop the part.",
        "spoon_task": "pick up the part and then freeze movement, or if you detect a good part then drop the part and then seek the waste area, or then seek the source area, or if you detect a good part then pick up the part and then seek the source area, or if you are in the waste area then seek the construction area, or otherwise then drop the part.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n            <StateAction>state_movement_freeze</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_good_part_detected</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_waste_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <StateAction>state_seek_source_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_good_part_detected</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n            <StateAction>state_seek_source_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_waste_area</Condition>\n            <StateAction>state_seek_construction_area</StateAction>\n        </Sequence>\n        <ActuatorAction>drop_part</ActuatorAction>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to pick up any scrap parts you find. If you're at the base, drop off the scrap part. If not, head to the construction area, and if you can't find any scrap parts, go to the source.",
        "technical_task": "if you detect a scrap part and if you are in the base then drop the part, or then pick up the part and then go to the construction, or otherwise then go to the source.",
        "spoon_task": "if you detect a scrap part and if you are in the base area then drop the part, or then pick up the part and then seek the construction area, or otherwise then seek the source area.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_scrap_part_detected</Condition>\n            <Condition>is_agent_in_base_area</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n        </Sequence>\n        <Sequence>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n            <StateAction>state_seek_construction_area</StateAction>\n        </Sequence>\n        <StateAction>state_seek_source_area</StateAction>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to drop any parts you have when you're in the waste. Then look around randomly. If you find a part while searching, pick it up. If you're in the base and you have a scrap part, make sure to pick it up. Otherwise, head to the waste.",
        "technical_task": "if you are in the waste then drop the part and then search randomly, or then pick up the part, or if you are in the base and if you are holding a scrap part then pick up the part, or otherwise then go to the waste.",
        "spoon_task": "if you are in the waste area then drop the part and then walk randomly, or then pick up the part, or if you are in the base area and if you are holding a scrap part then pick up the part, or otherwise then seek the waste area.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_agent_in_waste_area</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_random_walk</StateAction>\n        </Sequence>\n        <Sequence>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_base_area</Condition>\n            <Condition>is_agent_holding_scrap_part</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n        </Sequence>\n        <Sequence>\n            <StateAction>state_seek_waste_area</StateAction>\n        </Sequence>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to handle parts based on where you are and what you're holding. If you're in the construction area, drop the part and then head to the source. If you're holding a good part, go to the source. If you have a scrap part and you're in storage, pick it up and head to the base. If you're in the waste area, stay there. If you're in the source and holding both a scrap and a good part, drop one and then go to the waste. While in the source, go to the construction area. If you're in the waste and also in the source and construction area, pick up a part and move to the source. If you find a good part, take it to the base. In storage, if you're holding both a good part and a scrap part, drop one and then go to the base. If you're at the base, look around randomly. If you detect a good part and you have one already, drop it and head to the base. Otherwise, pick up any part you find.",
        "technical_task": "if you are in the construction then drop the part and then go to the source, or if you are holding a good part then go to the source, or if you are holding a scrap part and if you are holding a scrap part and if you are in the storage then pick up the part and then go to the base, or if you are in the waste then go to the waste, or if you are in the source and if you are holding a scrap part and if you are holding a good part then drop the part and then go to the waste, or if you are in the source then go to the construction, or if you are in the waste and if you are in the source and if you are in the construction then pick up the part and then go to the source, or if you detect a good part then go to the base, or if you are in the storage and if you are holding a good part and if you are holding a scrap part then drop the part and then go to the base, or if you are in the base then search randomly, or if you detect a good part and if you are holding a good part and if you detect a good part then drop the part and then go to the base, or otherwise then pick up the part.",
        "spoon_task": "if you are in the construction area then drop the part and then seek the source area, or if you are holding a good part then seek the source area, or if you are holding a scrap part and if you are holding a scrap part and if you are in the storage area then pick up the part and then seek the base area, or if you are in the waste area then seek the waste area, or if you are in the source area and if you are holding a scrap part and if you are holding a good part then drop the part and then seek the waste area, or if you are in the source area then seek the construction area, or if you are in the waste area and if you are in the source area and if you are in the construction area then pick up the part and then seek the source area, or if you detect a good part then seek the base area, or if you are in the storage area and if you are holding a good part and if you are holding a scrap part then drop the part and then seek the base area, or if you are in the base area then walk randomly, or if you detect a good part and if you are holding a good part and if you detect a good part then drop the part and then seek the base area, or otherwise then pick up the part.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_agent_in_construction_area</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_source_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_holding_good_part</Condition>\n            <StateAction>state_seek_source_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_holding_scrap_part</Condition>\n            <Condition>is_agent_holding_scrap_part</Condition>\n            <Condition>is_agent_in_storage_area</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n            <StateAction>state_seek_base_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_waste_area</Condition>\n            <StateAction>state_seek_waste_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_source_area</Condition>\n            <Condition>is_agent_holding_scrap_part</Condition>\n            <Condition>is_agent_holding_good_part</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_waste_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_source_area</Condition>\n            <StateAction>state_seek_construction_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_waste_area</Condition>\n            <Condition>is_agent_in_source_area</Condition>\n            <Condition>is_agent_in_construction_area</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n            <StateAction>state_seek_source_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_good_part_detected</Condition>\n            <StateAction>state_seek_base_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_storage_area</Condition>\n            <Condition>is_agent_holding_good_part</Condition>\n            <Condition>is_agent_holding_scrap_part</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_base_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_base_area</Condition>\n            <StateAction>state_random_walk</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_good_part_detected</Condition>\n            <Condition>is_agent_holding_good_part</Condition>\n            <Condition>is_good_part_detected</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_base_area</StateAction>\n        </Sequence>\n        <ActuatorAction>pick_up_part</ActuatorAction>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to pick up a part when you're in the storage area, and then head to the source to find more parts. If you're in the base, you should pick up a part as well.",
        "technical_task": "if you are in the storage then pick up the part and then go to the source, or then go to the source, or if you are in the storage then drop the part, or otherwise if you are in the base then pick up the part.",
        "spoon_task": "if you are in the storage area then pick up the part and then seek the source area, or then seek the source area, or if you are in the storage area then drop the part, or otherwise if you are in the base area then pick up the part.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_agent_in_storage_area</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n            <StateAction>state_seek_source_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <StateAction>state_seek_source_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_storage_area</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_base_area</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n        </Sequence>\n    </Selector>\n</BehaviorTree>"
    }
]