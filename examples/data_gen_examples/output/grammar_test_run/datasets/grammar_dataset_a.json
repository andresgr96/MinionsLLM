[
    {
        "layman_task": "Your task is to look for scrap parts and pick them up. If you find a good part, pick that up too. If you're holding a good part, drop it. If you're in the waste area, take a part to the base. Lastly, if you're at the base, drop off any parts you have. Otherwise, just search around randomly.",
        "technical_task": "iiiif you detect a scrap part theeeen pick up the part aaaand theeeen search randomly, oooor iiiif you detect a good part theeeen pick up the part, oooor iiiif you are holding a good part theeeen drop the part, oooor iiiif you are in the waste theeeen pick up the part aaaand theeeen go to the base, oooor otherwise iiiif you are in the base theeeen drop the part.",
        "spoon_task": "iiiif you detect a scrap part theeeen pick up the part aaaand theeeen walk randomly, oooor iiiif you detect a good part theeeen pick up the part, oooor iiiif you are holding a good part theeeen drop the part, oooor iiiif you are in the waste area theeeen pick up the part aaaand theeeen seek the base area, oooor otherwise iiiif you are in the base area theeeen drop the part.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_scrap_part_detected</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n            <StateAction>state_random_walk</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_good_part_detected</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_holding_good_part</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_waste_area</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n            <StateAction>state_seek_base_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_base_area</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n        </Sequence>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "If you are in the waste area, pick up any part you find and then look around randomly. If you are at the base, head towards the source area. If you see a good part, stop moving. If you have a good part, take it to the waste area. If you have a scrap part, drop it.",
        "technical_task": "iiiif you are in the waste theeeen pick up the part aaaand theeeen search randomly, oooor iiiif you are in the base theeeen go to the source, oooor iiiif you detect a good part theeeen stop moving, oooor iiiif you are holding a good part theeeen go to the waste, oooor otherwise iiiif you are holding a scrap part theeeen drop the part.",
        "spoon_task": "iiiif you are in the waste area theeeen pick up the part aaaand theeeen walk randomly, oooor iiiif you are in the base area theeeen seek the source area, oooor iiiif you detect a good part theeeen freeze movement, oooor iiiif you are holding a good part theeeen seek the waste area, oooor otherwise iiiif you are holding a scrap part theeeen drop the part.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_agent_in_waste_area</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n            <StateAction>state_random_walk</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_base_area</Condition>\n            <StateAction>state_seek_source_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_good_part_detected</Condition>\n            <StateAction>state_movement_freeze</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_holding_good_part</Condition>\n            <StateAction>state_seek_waste_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_holding_scrap_part</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n        </Sequence>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "If you're holding a good part, drop it off and then head to the waste. If you're in the source area, just stop moving. If you're in the construction area, drop the part. If you're in the waste, go back to the base. If you see a good part, go to the storage. Otherwise, pick up the part.",
        "technical_task": "iiiif you are holding a good part theeeen drop the part aaaand theeeen go to the waste, oooor iiiif you are in the source theeeen stop moving, oooor iiiif you are in the construction theeeen drop the part, oooor iiiif you are in the waste theeeen go to the base, oooor iiiif you detect a good part theeeen go to the storage, oooor otherwise theeeen pick up the part.",
        "spoon_task": "iiiif you are holding a good part theeeen drop the part aaaand theeeen seek the waste area, oooor iiiif you are in the source area theeeen freeze movement, oooor iiiif you are in the construction area theeeen drop the part, oooor iiiif you are in the waste area theeeen seek the base area, oooor iiiif you detect a good part theeeen seek the storage area, oooor otherwise theeeen pick up the part.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_agent_holding_good_part</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_waste_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_source_area</Condition>\n            <StateAction>state_movement_freeze</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_construction_area</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_waste_area</Condition>\n            <StateAction>state_seek_base_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_good_part_detected</Condition>\n            <StateAction>state_seek_storage_area</StateAction>\n        </Sequence>\n        <ActuatorAction>pick_up_part</ActuatorAction>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "If you're in the storage area, just stay still. If you're in the source area, then pick up the part.",
        "technical_task": "iiiif you are in the storage theeeen stop moving, oooor otherwise iiiif you are in the source theeeen pick up the part.",
        "spoon_task": "iiiif you are in the storage area theeeen freeze movement, oooor otherwise iiiif you are in the source area theeeen pick up the part.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_agent_in_storage_area</Condition>\n            <StateAction>state_movement_freeze</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_source_area</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n        </Sequence>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "If you're in the storage area, go to the waste area. If you're holding a good part, drop it and then head to the waste area. Otherwise, just stop moving.",
        "technical_task": "iiiif you are in the storage theeeen go to the waste, oooor iiiif you are holding a good part theeeen drop the part aaaand theeeen go to the waste, oooor otherwise theeeen stop moving.",
        "spoon_task": "iiiif you are in the storage area theeeen seek the waste area, oooor iiiif you are holding a good part theeeen drop the part aaaand theeeen seek the waste area, oooor otherwise theeeen freeze movement.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_agent_in_storage_area</Condition>\n            <StateAction>state_seek_waste_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_holding_good_part</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_waste_area</StateAction>\n        </Sequence>\n        <StateAction>state_movement_freeze</StateAction>\n    </Selector>\n</BehaviorTree>"
    }
]