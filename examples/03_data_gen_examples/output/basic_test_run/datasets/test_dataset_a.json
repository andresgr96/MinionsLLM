[
    {
        "layman_task": "If you're in the construction area, drop the part and then head to the source. If you detect a scrap part, drop that part and then go to the storage.",
        "technical_task": "if you are in the construction then drop the part and then go to the source, or then drop the part, or otherwise if you detect a scrap part then drop the part and then go to the storage.",
        "spoon_task": "if you are in the construction area then drop the part and then seek the source area, or then drop the part, or otherwise if you detect a scrap part then drop the part and then seek the storage area.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_agent_in_construction_area</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_source_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <ActuatorAction>drop_part</ActuatorAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_scrap_part_detected</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_storage_area</StateAction>\n        </Sequence>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to drop the part you are holding.",
        "technical_task": "drop the part.",
        "spoon_task": "drop the part.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Sequence>\n        <ActuatorAction>drop_part</ActuatorAction>\n    </Sequence>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to look around randomly while you are in the source area.",
        "technical_task": "if you are in the source then search randomly.",
        "spoon_task": "if you are in the source area then walk randomly.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Sequence>\n        <Condition>is_agent_in_source_area</Condition>\n        <StateAction>state_random_walk</StateAction>\n    </Sequence>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to pick up the part if you're at the base, and then just stay where you are.",
        "technical_task": "if you are in the base then pick up the part and then stop moving.",
        "spoon_task": "if you are in the base area then pick up the part and then freeze movement.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Sequence>\n        <Condition>is_agent_in_base_area</Condition>\n        <ActuatorAction>pick_up_part</ActuatorAction>\n        <StateAction>state_movement_freeze</StateAction>\n    </Sequence>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to move to different areas based on where you are. If you\u2019re at the source, head to the construction area. If you\u2019re in the storage, drop off the part and then go to the base. If you\u2019re in the storage and not dropping off a part, look around randomly. If you\u2019re at the source, drop the part and stay there. If you\u2019re at the base, go back to the source. If you\u2019re in the construction area, drop the part and stay there. If you\u2019re in the waste, return to the base. If you spot a scrap part, drop what you have and head to storage. If you\u2019re in storage, go to the waste. If you\u2019re holding a good part, drop it off and then go to the waste. If you\u2019re holding a good part, just go to waste. If none of these apply, then look for parts to pick up.",
        "technical_task": "if you are in the source then go to the construction, or if you are in the storage then drop the part and then go to the base, or if you are in the storage then search randomly, or if you are in the source then drop the part and then go to the source, or if you are in the base then go to the source, or if you are in the construction then drop the part and then go to the construction, or if you are in the waste then go to the base, or if you detect a scrap part then drop the part and then go to the storage, or if you are in the storage then go to the waste, or if you are holding a good part then drop the part and then go to the waste, or if you are holding a good part then go to the waste, or otherwise then pick up the part.",
        "spoon_task": "if you are in the source area then seek the construction area, or if you are in the storage area then drop the part and then seek the base area, or if you are in the storage area then walk randomly, or if you are in the source area then drop the part and then seek the source area, or if you are in the base area then seek the source area, or if you are in the construction area then drop the part and then seek the construction area, or if you are in the waste area then seek the base area, or if you detect a scrap part then drop the part and then seek the storage area, or if you are in the storage area then seek the waste area, or if you are holding a good part then drop the part and then seek the waste area, or if you are holding a good part then seek the waste area, or otherwise then pick up the part.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_agent_in_source_area</Condition>\n            <StateAction>state_seek_construction_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_storage_area</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_base_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_storage_area</Condition>\n            <StateAction>state_random_walk</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_source_area</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_source_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_base_area</Condition>\n            <StateAction>state_seek_source_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_construction_area</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_construction_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_waste_area</Condition>\n            <StateAction>state_seek_base_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_scrap_part_detected</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_storage_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_in_storage_area</Condition>\n            <StateAction>state_seek_waste_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_holding_good_part</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_waste_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_holding_good_part</Condition>\n            <StateAction>state_seek_waste_area</StateAction>\n        </Sequence>\n        <ActuatorAction>pick_up_part</ActuatorAction>\n    </Selector>\n</BehaviorTree>"
    }
]