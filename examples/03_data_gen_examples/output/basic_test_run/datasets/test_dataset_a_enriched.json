[
    {
        "layman_task": "Your task is to pick up parts while you're in the waste area. After that, either head to the construction area or stop moving. If there are no parts, just wander around.",
        "technical_task": "if you are in the waste then pick up the part and then go to the construction, or then pick up the part and then stop moving, or otherwise then search randomly.",
        "spoon_task": "if you are in the waste area then pick up the part and then seek the construction area, or then pick up the part and then freeze movement, or otherwise then walk randomly.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_agent_in_waste_area</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n            <StateAction>state_seek_construction_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n            <StateAction>state_movement_freeze</StateAction>\n        </Sequence>\n        <StateAction>state_random_walk</StateAction>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to find any scrap parts and pick them up.",
        "technical_task": "if you detect a scrap part then pick up the part.",
        "spoon_task": "if you detect a scrap part then pick up the part.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Sequence>\n        <Condition>is_scrap_part_detected</Condition>\n        <ActuatorAction>pick_up_part</ActuatorAction>\n    </Sequence>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to drop the good part if you have one and you're in the storage area. If you're holding a good part, take it back to the base. Otherwise, head to the storage.",
        "technical_task": "if you are holding a good part and if you are in the storage then drop the part, or then drop the part and then go to the base, or otherwise then go to the storage.",
        "spoon_task": "if you are holding a good part and if you are in the storage area then drop the part, or then drop the part and then seek the base area, or otherwise then seek the storage area.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_agent_holding_good_part</Condition>\n            <Condition>is_agent_in_storage_area</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n        </Sequence>\n        <Sequence>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_seek_base_area</StateAction>\n        </Sequence>\n        <StateAction>state_seek_storage_area</StateAction>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "If you have a good part, take it to the storage area.",
        "technical_task": "if you are holding a good part then go to the storage.",
        "spoon_task": "if you are holding a good part then seek the storage area.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Sequence>\n        <Condition>is_agent_holding_good_part</Condition>\n        <StateAction>state_seek_storage_area</StateAction>\n    </Sequence>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to pick up the part whenever you see one.",
        "technical_task": "pick up the part, or then pick up the part, or then pick up the part, or otherwise then pick up the part.",
        "spoon_task": "pick up the part, or then pick up the part, or then pick up the part, or otherwise then pick up the part.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n        </Sequence>\n        <Sequence>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n        </Sequence>\n        <Sequence>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n        </Sequence>\n        <ActuatorAction>pick_up_part</ActuatorAction>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "Find scrap parts and bring them to the storage.",
        "technical_task": "if you are holding a scrap part and if you are in the storage then drop the part, or if you are holding a scrap part then go to the storage, or if you detect a good part then pick up the part, or otherwise then search randomly.",
        "spoon_task": "if you are holding a scrap part and if you are in the storage area then drop the part, or if you are holding a scrap part then seek the storage area, or if you detect a good part then pick up the part, or otherwise then walk randomly.",
        "tree": "<BehaviorTree>\n                    <Selector>\n\n                        <Sequence>\n                            <Condition>is_agent_holding_scrap_part</Condition>\n                            <Condition>is_agent_in_storage_area</Condition>\n                            <ActuatorAction>drop_part</ActuatorAction>\n                        </Sequence>\n\n                        <Sequence>\n                            <Condition>is_agent_holding_scrap_part</Condition>\n                            <StateAction>state_seek_storage_area</StateAction>\n                        </Sequence>\n                \n                        <Sequence>\n                            <Condition>is_good_part_detected</Condition>\n                            <ActuatorAction>pick_up_part</ActuatorAction>\n                        </Sequence>       \n\n                        <StateAction>state_random_walk</StateAction>\n                    </Selector>\n                </BehaviorTree>"
    },
    {
        "layman_task": "Find good parts and bring them to the waste.",
        "technical_task": "if you are holding a good part and if you are in the waste then drop the part, or if you are holding a good part then go to the waste, or if you detect a good part then pick up the part, or otherwise then go to the source.",
        "spoon_task": "if you are holding a good part and if you are in the waste area then drop the part, or if you are holding a good part then seek the waste area, or if you detect a good part then pick up the part, or otherwise then seek the source area.",
        "tree": "<BehaviorTree>\n                    <Selector>\n\n                        <Sequence>\n                            <Condition>is_agent_holding_good_part</Condition>\n                            <Condition>is_agent_in_waste_area</Condition>\n                            <ActuatorAction>drop_part</ActuatorAction>\n                        </Sequence>\n\n                        <Sequence>\n                            <Condition>is_agent_holding_good_part</Condition>\n                            <StateAction>state_seek_waste_area</StateAction>\n                        </Sequence>\n                \n                        <Sequence>\n                            <Condition>is_good_part_detected</Condition>\n                            <ActuatorAction>pick_up_part</ActuatorAction>\n                        </Sequence>       \n\n                        <StateAction>state_seek_source_area</StateAction>\n                    </Selector>\n                </BehaviorTree>"
    },
    {
        "layman_task": "Find scrap parts and bring them to the source.",
        "technical_task": "if you are holding a scrap part and if you are in the source then drop the part, or if you are holding a scrap part then go to the source, or if you detect a scrap part then pick up the part, or otherwise then search randomly.",
        "spoon_task": "if you are holding a scrap part and if you are in the source area then drop the part, or if you are holding a scrap part then seek the source area, or if you detect a scrap part then pick up the part, or otherwise then walk randomly.",
        "tree": "<BehaviorTree>\n                    <Selector>\n\n                        <Sequence>\n                            <Condition>is_agent_holding_scrap_part</Condition>\n                            <Condition>is_agent_in_source_area</Condition>\n                            <ActuatorAction>drop_part</ActuatorAction>\n                        </Sequence>\n\n                        <Sequence>\n                            <Condition>is_agent_holding_scrap_part</Condition>\n                            <StateAction>state_seek_source_area</StateAction>\n                        </Sequence>\n                \n                        <Sequence>\n                            <Condition>is_scrap_part_detected</Condition>\n                            <ActuatorAction>pick_up_part</ActuatorAction>\n                        </Sequence>       \n\n                        <StateAction>state_random_walk</StateAction>\n                    </Selector>\n                </BehaviorTree>"
    },
    {
        "layman_task": "Find scrap parts and bring them to the construction.",
        "technical_task": "if you are holding a scrap part and if you are in the construction then drop the part, or if you are holding a scrap part then go to the construction, or if you detect a scrap part then pick up the part, or otherwise then search randomly.",
        "spoon_task": "if you are holding a scrap part and if you are in the construction area then drop the part, or if you are holding a scrap part then seek the construction area, or if you detect a scrap part then pick up the part, or otherwise then walk randomly.",
        "tree": "<BehaviorTree>\n                    <Selector>\n\n                        <Sequence>\n                            <Condition>is_agent_holding_scrap_part</Condition>\n                            <Condition>is_agent_in_construction_area</Condition>\n                            <ActuatorAction>drop_part</ActuatorAction>\n                        </Sequence>\n\n                        <Sequence>\n                            <Condition>is_agent_holding_scrap_part</Condition>\n                            <StateAction>state_seek_construction_area</StateAction>\n                        </Sequence>\n                \n                        <Sequence>\n                            <Condition>is_scrap_part_detected</Condition>\n                            <ActuatorAction>pick_up_part</ActuatorAction>\n                        </Sequence>       \n\n                        <StateAction>state_random_walk</StateAction>\n                    </Selector>\n                </BehaviorTree>"
    },
    {
        "layman_task": "Find scrap parts and stop moving when you find one.",
        "technical_task": "if you are holding a scrap part then stop moving, or if you detect a scrap part then pick up the part, or otherwise then search randomly.",
        "spoon_task": "if you are holding a scrap part then freeze movement, or if you detect a scrap part then pick up the part, or otherwise then walk randomly.",
        "tree": "<BehaviorTree>\n                    <Selector>\n\n                        <Sequence>\n                            <Condition>is_agent_holding_scrap_part</Condition>\n                            <StateAction>state_movement_freeze</StateAction>\n                        </Sequence>   \n\n                        <Sequence>\n                            <Condition>is_scrap_part_detected</Condition>\n                            <ActuatorAction>pick_up_part</ActuatorAction>\n                        </Sequence>   \n\n                        <StateAction>state_random_walk</StateAction>\n                    </Selector>\n                </BehaviorTree>"
    }
]