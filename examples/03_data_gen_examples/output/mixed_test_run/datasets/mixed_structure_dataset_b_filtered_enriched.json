[
    {
        "layman_task": "Your task is to find a good part in the environment and pick it up.",
        "technical_task": "if you detect a good part then pick up the part, or otherwise then go to the source.",
        "spoon_task": "if you detect a good part then pick up the part, or otherwise then seek the source area.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_good_part_detected</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n        </Sequence>\n        <StateAction>state_seek_source_area</StateAction>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to find a good part in the environment and pick it up.",
        "technical_task": "if you detect a good part then pick up the part, or otherwise then go to the source.",
        "spoon_task": "if you detect a good part then pick up the part, or otherwise then seek the source area.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_good_part_detected</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n        </Sequence>\n        <StateAction>state_seek_source_area</StateAction>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to find a scrap part and pick it up, otherwise keep moving randomly.",
        "technical_task": "if you detect a scrap part then pick up the part, or otherwise then search randomly.",
        "spoon_task": "if you detect a scrap part then pick up the part, or otherwise then walk randomly.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_scrap_part_detected</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n        </Sequence>\n        <StateAction>state_random_walk</StateAction>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to find a scrap part and pick it up, otherwise keep wandering randomly.",
        "technical_task": "if you detect a scrap part then pick up the part, or otherwise then search randomly.",
        "spoon_task": "if you detect a scrap part then pick up the part, or otherwise then walk randomly.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_scrap_part_detected</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n        </Sequence>\n        <StateAction>state_random_walk</StateAction>\n    </Selector>\n</BehaviorTree>"
    },
    {
        "layman_task": "Your task is to find a good part, pick it up, and then go to the construction area; if you are holding a good part and are in the construction area, drop it. Otherwise, keep seeking the source area to find good parts.",
        "technical_task": "if you detect a good part then pick up the part and then go to the construction, or if you are holding a good part and if you are in the construction then drop the part and then stop moving, or otherwise then go to the source.",
        "spoon_task": "if you detect a good part then pick up the part and then seek the construction area, or if you are holding a good part and if you are in the construction area then drop the part and then freeze movement, or otherwise then seek the source area.",
        "tree": "<?xml version=\"1.0\" ?>\n<BehaviorTree>\n    <Selector>\n        <Sequence>\n            <Condition>is_good_part_detected</Condition>\n            <ActuatorAction>pick_up_part</ActuatorAction>\n            <StateAction>state_seek_construction_area</StateAction>\n        </Sequence>\n        <Sequence>\n            <Condition>is_agent_holding_good_part</Condition>\n            <Condition>is_agent_in_construction_area</Condition>\n            <ActuatorAction>drop_part</ActuatorAction>\n            <StateAction>state_movement_freeze</StateAction>\n        </Sequence>\n        <StateAction>state_seek_source_area</StateAction>\n    </Selector>\n</BehaviorTree>"
    }
]